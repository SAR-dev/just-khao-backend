<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="just.khao.com.repository.postgres.AuthRepository">
    <select id="findByUsernameOrEmail" resultType="just.khao.com.entity.AuthEntity">
        SELECT * FROM auth WHERE username = #{username} OR email = #{email}
    </select>

    <insert id="createAuth">
        INSERT INTO auth
        (username, email, hashed_password)
        VALUES
        (#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{hashed_password, jdbcType=VARCHAR})
    </insert>

    <update id="updateToken">
        UPDATE auth
        SET refresh_token = #{refresh_token, jdbcType=VARCHAR}, refreshed_at = #{refreshed_at, jdbcType=TIMESTAMP}
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <insert id="createGoogleAuth">
        DO
        $do$
            BEGIN
                IF EXISTS (SELECT username FROM auth WHERE username = '${username}') THEN
                    INSERT INTO auth (email, verified) VALUES ('${email}', true) ON CONFLICT (email) DO UPDATE SET verified = true;
                ELSE
                    INSERT INTO auth (username, email, verified) VALUES ('${username}', '${email}', true) ON CONFLICT (email) DO UPDATE SET verified = true;
                END IF;
            END
        $do$;
    </insert>
</mapper>